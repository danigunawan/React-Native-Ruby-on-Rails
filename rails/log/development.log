Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:04:01 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (1.9ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.9ms | ActiveRecord: 3.7ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:21 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"e", "password_digest"=>"[FILTERED]", "picture"=>"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OgFQy21vOf30av7kA1YooAhS3gjQokahT1AAANOjhiiG2JAg9FGKkooAhlghnGJkVwPUZpsVrbwcwxqme4GKsUUARJDFGxeNFUt1IABP1qWiigBKry2lrMcyxKx9SBmrNFAEEVtBB/qY1TPoAKmIyMHmlooAp/YLItu8lM/7oq0qqoCqMAdhTqKAIpIYphtlRXA7MAf505EWNQiAKB2HAp9FAEMsEM2PORXx03AHH51KqhVCqMAcAClooAKaQGGGGQadRQBTOn2ROTCmf90VOsMSJsRFCnsAMVLRQBBHbwQnMUaoT/dAH8qlZQw2sMg9qdRQBDHbwQndFGqE/wB0AUgtrcSeaI1D9d20Z/Op6KAExVVrCzZt7QoT/uirdFADVUKAqgADoBUElnazHdLErH1IGas0UAQxwRQjEKKn0AFTUUUAFFFFABRRRQAUUUUAFFFFABRRRQB//9LrqKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigD/0+uooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKAP/U66iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACii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yDuznj6VpRW/lzvNuzvxx9Kie0cSmW2fyy33hjINADYYLlblriXaNwwQuaVLm4uMtbooUHGWPXHsBU8Mc6kmeTfnsBjFVktLiHKwS7UJyARnFAEdju+0z78ZzzjpmtWqlvaC3kdwxbd69at0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAVfserfhVCr9j1b8KANCiiigD/9PrqKKKAMu9/wBaPpVSrd7/AK0fSqlABRRRQAUHmiigCpb2UVs7SITluuat0UUAFFFFABRRRQAUUUUAFFFFAFe5to7pAkmcA54qWKNYoxGvQDFPooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAq/Y9W/CqFX7Hq34UAaFFFFAH//1OuooooAy73/AFo+lVKt3v8ArR9KqUAFV/tdr/z0X8xVg9K5GzjtpJGFy20DpQB1UcsUufLYNjrg5qSs2H7JZwySwksvfnNQJqVzIvmRwZQehoA2aKyNQupEtRhCpfqfSm6dcTlI4TF8v9/PvQBs0Vn3F1cRy+VFCX988Uy11Hzpvs8qbHoA06rzXcNuyrKcFulVbvUBBIIY13uayb24eeSLzEKMDyDQB1AORkUVSubxLSJSwySOAKpf2pKhDTQlUPfPb8qANqiqlxc+Vb+dEu/OMY9DU0EhliWRl2kjOKAJaKKKAGPLHEMyMFHvUX2u1/56r+YqnqW390G6buasCOx6DZ+dAFkyIHCEgM3QetPqrLIi3UUZXJbOG9MCia5MbiGNd7nnGcYHuaALVFU4rpjL5E6eWxGRzkGlnuikghiQyPjOM4AH1oAt0VXhknbPnR7MdMEGi1n+0wibGM54+lAFiiqy3O64eDbyoznNUYZ7o3UuI8kYGN3TrQBr0VBLJKiqUjLk9RkDH41Al24mENxHsLdDnIoAvVHLKkIUycbiFH1NV57vy5BBEhdzzjp+tUruaRjFHNHsPmKRzkGgDZoqKV3jTKIXPTA4qr9rljdVuItgbgEH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5IO7PbjmgDRSRJBmNg30OadXN6b9sI/c42bhuzV+9vZI5VtrcZc0AatFYX2y8tJFF4Mq3cVdu3vBIn2UZU9aANCiiigCDzx9p+zY527s/jip6yZmkXUgIhljHjnoOae891aupuCrIxxx2oA06Khm8/aBBjPq1U/OuoJkS4KsshwCvY0AaVFULq4liniijAO/P51FLPeWhEk210JxheuaANSq91cC2i80jPOKqSyX6R/aPl2jnb3xTNQkEuniUfxEGgDWorPJ1Bl81NoHUKev51Ztp1uIhIv4j3oAnooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKv2PVvwqhV+x6t+FAGhRRRQB//0+uooooAy73/AFo+lVKt3v8ArR9KqUANZdylfUYrnLGcWMzw3Hyg966WoJbaCf8A1qg0ARx31tLIIo23E+xrItmWyvnE/wAoIIBrZhs7aBt0SYPrTpraCf8A1q5xQBiTMLzUU8g5CjBP50upf8hCP6D+ZrbhtoIM+UoXNJJbQSyCWRcsOhoAz9Y/49x9arXqM2nQuOQoXP5VtywRTrtlXcKcI0EflY+UDGPagChFqNp5S5bBwBjBqhq6EyxzHOwjFag0+zVtwQfrVp40kXY4yPSgDn/s+nFQxmPPanaqqpDAi8gDA/StQafZqdwjH61n60DiLA9aAC4voHsPLU/OQBipreJ00t1I5Kk1ZWytXCyMgzgVdwMY7UAYOlXMMUbRyNhieKS6P2fUluH+4cHNaosLQP5gQZzmp5YYpl2yqGFAGDqVxFdNHHAdxH9a1WuobQJFMecCpIrO2hbdGgBp0ttBMwaVQSvSgCeiiigDO/5iv/bL+tN1X/Up/vitDyo/N87Hz4xn2pJIY5gFkGQDmgChcyu12ttv8tSMk9zVWeOGO4hWNix3jOTnFa81vDP/AK1c4pq2tuoACDg5H1oArXH/ACELf/gX8qNU/wBQv++tXWijZ1kYZZeh9M0SRRzALIMgHP40AR3H/Hq3+7WXcf8AIJT8K2mVWUowyDTDBEYxEV+UdB9KAGLcwmISlgBjNVtMRlt9zDG4kip2srVm3FBnr3q0AAMCgAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKv2PVvwqhV+x6t+FAGhRRRQB//9TrqKKKAMu9/wBaPpVSrd7/AK0fSqlABRRRQAUUUUAFFFFABRRRQAUUUUAFNZEf7wB+tOooAOlFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABV+x6t+FUKv2PVvwoA0KKKKAP/9XrqKKKAMu9/wBaPpVSrd7/AK0fSqlABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAVfserfhVCr9j1b8KANCiiigD//2Q==", "type"=>"jpeg", "user"=>{"username"=>"e", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (2.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "e"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "e"], ["created_at", "2018-07-18 06:04:21.924288"], ["updated_at", "2018-07-18 06:04:21.924288"], ["password_digest", "1"], ["picture", "8e70fe98-c57b-41bd-8df9-45d0a1419a9d.jpeg"]]
  [1m[35m (13.0ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 130ms (Views: 0.2ms | ActiveRecord: 26.6ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:37 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"ed", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"ed", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "ed"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "ed"], ["created_at", "2018-07-18 06:04:37.365932"], ["updated_at", "2018-07-18 06:04:37.365932"], ["password_digest", "1"], ["picture", "68c7cfe3-7826-4eb5-b146-ed14a9a3e67b.jpeg"]]
  [1m[35m (47.6ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 50.0ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:42 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"edu", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"edu", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "edu"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "edu"], ["created_at", "2018-07-18 06:04:42.799994"], ["updated_at", "2018-07-18 06:04:42.799994"], ["password_digest", "1"], ["picture", "6161a7de-bd8e-44d8-82db-92df0505c960.jpeg"]]
  [1m[35m (50.5ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 63ms (Views: 0.2ms | ActiveRecord: 51.4ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:53 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"eda", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"eda", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "eda"], ["LIMIT", 1]]
  [1m[35mSQL (4.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "eda"], ["created_at", "2018-07-18 06:04:53.908958"], ["updated_at", "2018-07-18 06:04:53.908958"], ["password_digest", "1"], ["picture", "bb292ba1-40f6-4eb8-af59-e97e7250c715.jpeg"]]
  [1m[35m (51.1ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 63ms (Views: 0.2ms | ActiveRecord: 55.8ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:05:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:07:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:07:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:09:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:10:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:13:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:14:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:15:01 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:15:06 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:17:13 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:17:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:18:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:19:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:19:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:20:40 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:22:48 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:23:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:24:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:24:33 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:25:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:27:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:28:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:28:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1" for 127.0.0.1 at 2018-07-18 02:29:22 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/favicon.ico" for 127.0.0.1 at 2018-07-18 02:29:22 -0400
Started GET "/favicon.ico" for 127.0.0.1 at 2018-07-18 02:29:22 -0400
  
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:30:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:31:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 3.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:32:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:32:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:32:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started GET "/find/edugz" for 192.168.1.100 at 2018-07-18 02:32:40 -0400
  
ActionController::RoutingError (No route matches [GET] "/find/edugz"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:33:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.9ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 02:33:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"edugz", "password"=>"[FILTERED]", "user"=>{"username"=>"edugz", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "edugz"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 02:33:54 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started GET "/find/e" for 192.168.1.100 at 2018-07-18 02:33:55 -0400
  
ActionController::RoutingError (No route matches [GET] "/find/e"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:34:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:35:18 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:35:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:35:30 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:37:23 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:37:41 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:37:46 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:37:48 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:38:03 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:38:06 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 3ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:38:20 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:38:21 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:39:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:39:37 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:39:48 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:40:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:40:13 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:41:01 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:41:02 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.8ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 5ms (Views: 2.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:41:42 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:41:43 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:41:51 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:41:56 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:42:56 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:43:03 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:43:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (1.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:43:40 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 01:59:20 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 11ms (Views: 9.1ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:00:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 11ms (Views: 7.1ms | ActiveRecord: 4.1ms)


  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE (username like '%e%') LIMIT $1[0m  [["LIMIT", 11]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" LIMIT $1[0m  [["LIMIT", 11]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM "users" WHERE (username like '%e%')[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "users" WHERE (username like '%ed%')[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE (username like '%ed%') LIMIT $1[0m  [["LIMIT", 11]]
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:04:22 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:06:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/t" for 172.20.10.1 at 2018-07-18 02:11:48 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"t", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "t"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:12:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 10ms (Views: 8.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/r" for 172.20.10.1 at 2018-07-18 02:12:48 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"r", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "r"]]
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:13:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/d" for 172.20.10.1 at 2018-07-18 02:13:19 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"d", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "d"]]
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:13:26 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:13:42 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:13:45 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "ed"]]
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:13:49 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edu"]]
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edua" for 172.20.10.1 at 2018-07-18 02:13:51 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edua", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edua"]]
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:13:54 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edu"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edug" for 172.20.10.1 at 2018-07-18 02:13:56 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edug", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edug"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edugz" for 172.20.10.1 at 2018-07-18 02:13:58 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edugz", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edugz"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edug" for 172.20.10.1 at 2018-07-18 02:14:05 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edug", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edug"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:14:07 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edu"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edua" for 172.20.10.1 at 2018-07-18 02:14:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edua", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edua"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/eduar" for 172.20.10.1 at 2018-07-18 02:14:12 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"eduar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "eduar"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/eduard" for 172.20.10.1 at 2018-07-18 02:14:14 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"eduard", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "eduard"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/eduardo" for 172.20.10.1 at 2018-07-18 02:14:16 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"eduardo", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "eduardo"]]
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:15:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:17:28 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:18:28 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
Completed 500 Internal Server Error in 41ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `like' for #<Api::V1::UsersController:0x007f0a94004498>):
  
app/controllers/api/v1/users_controller.rb:78:in `get_user'
Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:18:51 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:18:54 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like 'e')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:19:03 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like 'ed')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:19:39 -0400
  
SyntaxError (/home/cesar/Urulife/railstagram/rails/app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tIDENTIFIER, expecting ')'
e("username like ?", '%'params[:username]'%')
                              ^
/home/cesar/Urulife/railstagram/rails/app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tSTRING_BEG, expecting keyword_end
like ?", '%'params[:username]'%')
                              ^
/home/cesar/Urulife/railstagram/rails/app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected ')', expecting keyword_end
e ?", '%'params[:username]'%')
                              ^):
  
app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tIDENTIFIER, expecting ')'
app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tSTRING_BEG, expecting keyword_end
app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected ')', expecting keyword_end
Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:20:00 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 10ms (Views: 7.1ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:20:08 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:20:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:20:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:21:12 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 10ms (Views: 7.3ms | ActiveRecord: 3.8ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:21:15 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:22:00 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:22:04 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:22:06 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:22:20 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:22:31 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:22:36 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:22:38 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:22:50 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:22:55 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:23:21 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:23:29 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:24:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:24:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:25:24 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:25:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:25:58 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:26:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:26:31 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:26:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:27:03 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:27:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:27:18 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:27:22 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:27:53 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:28:53 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:30:07 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:30:12 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:30:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/q" for 172.20.10.1 at 2018-07-18 02:30:44 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"q", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%q%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:31:52 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:33:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:33:32 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:33:42 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:34:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:36:58 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:37:02 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:37:51 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:37:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:38:00 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:38:04 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:38:07 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:38:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:38:11 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:38:11 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:40:19 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:40:23 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/c" for 172.20.10.1 at 2018-07-18 02:40:28 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"c", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%c%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cb" for 172.20.10.1 at 2018-07-18 02:40:29 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cb", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cb%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/c" for 172.20.10.1 at 2018-07-18 02:40:30 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"c", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%c%')[0m
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:40:31 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:40:31 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:40:35 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:40:35 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


<<<<<<< HEAD
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:51:15 -0400
  
ActiveRecord::NoDatabaseError (FATAL:  role "eduardo" does not exist
):
  
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:701:in `rescue in connect'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:697:in `connect'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:221:in `initialize'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:38:in `new'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:38:in `postgresql_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:759:in `new_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:803:in `checkout_new_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:782:in `try_to_checkout_new_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:743:in `acquire_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:500:in `checkout'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:374:in `connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:931:in `retrieve_connection'
activerecord (5.1.6) lib/active_record/connection_handling.rb:116:in `retrieve_connection'
activerecord (5.1.6) lib/active_record/connection_handling.rb:88:in `connection'
activerecord (5.1.6) lib/active_record/migration.rb:562:in `connection'
activerecord (5.1.6) lib/active_record/migration.rb:553:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:51:55 -0400
  
ActiveRecord::NoDatabaseError (FATAL:  role "eduardo" does not exist
):
  
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:701:in `rescue in connect'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:697:in `connect'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:221:in `initialize'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:38:in `new'
activerecord (5.1.6) lib/active_record/connection_adapters/postgresql_adapter.rb:38:in `postgresql_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:759:in `new_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:803:in `checkout_new_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:782:in `try_to_checkout_new_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:743:in `acquire_connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:500:in `checkout'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:374:in `connection'
activerecord (5.1.6) lib/active_record/connection_adapters/abstract/connection_pool.rb:931:in `retrieve_connection'
activerecord (5.1.6) lib/active_record/connection_handling.rb:116:in `retrieve_connection'
activerecord (5.1.6) lib/active_record/connection_handling.rb:88:in `connection'
activerecord (5.1.6) lib/active_record/migration.rb:562:in `connection'
activerecord (5.1.6) lib/active_record/migration.rb:553:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:52:11 -0400
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  
ActiveRecord::PendingMigrationError (

Migrations are pending. To resolve this issue, run:

        bin/rails db:migrate RAILS_ENV=development

):
  
activerecord (5.1.6) lib/active_record/migration.rb:576:in `check_pending!'
activerecord (5.1.6) lib/active_record/migration.rb:553:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:26:in `block in call'
activesupport (5.1.6) lib/active_support/callbacks.rb:97:in `run_callbacks'
actionpack (5.1.6) lib/action_dispatch/middleware/callbacks.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:59:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(3343973260304226585)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to AddPictureToUsers (20180718042153)
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "users" ADD "picture" character varying[0m
  [1m[35m (0.1ms)[0m  [1m[31mROLLBACK[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(3343973260304226585)[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35m (214.5ms)[0m  [1m[35mDROP DATABASE IF EXISTS "railstagram_dev"[0m
  [1m[35m (211.3ms)[0m  [1m[35mDROP DATABASE IF EXISTS "railstagram_test"[0m
  [1m[35m (544.4ms)[0m  [1m[35mCREATE DATABASE "railstagram_dev" ENCODING = 'unicode'[0m
  [1m[35m (502.3ms)[0m  [1m[35mCREATE DATABASE "railstagram_test" ENCODING = 'unicode'[0m
  [1m[35m (193.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL PRIMARY KEY)[0m
  [1m[35m (65.9ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying NOT NULL PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_try_advisory_lock(3343973260304226585)[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateUsers (20180629000407)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (63.1ms)[0m  [1m[35mCREATE TABLE "users" ("id" bigserial primary key, "username" character varying, "password" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180629000407"]]
  [1m[35m (13.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddIndexToUsersUsername (20180630012316)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (3.6ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180630012316"]]
  [1m[35m (8.5ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddPasswordDigestToUsers (20180630012445)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mALTER TABLE "users" ADD "password_digest" character varying[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180630012445"]]
  [1m[35m (6.2ms)[0m  [1m[35mCOMMIT[0m
Migrating to AddPictureToUsers (20180718042153)
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.3ms)[0m  [1m[35mALTER TABLE "users" ADD "picture" character varying[0m
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ($1) RETURNING "version"[0m  [["version", "20180718042153"]]
  [1m[35m (6.0ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-07-18 06:52:54.381274"], ["updated_at", "2018-07-18 06:52:54.381274"]]
  [1m[35m (8.4ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT pg_advisory_unlock(3343973260304226585)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "Eduardo"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "eduardo"], ["created_at", "2018-07-18 06:53:00.261114"], ["updated_at", "2018-07-18 06:53:00.261114"], ["password_digest", "$2a$10$cnmyuSB4SAfGtUGrmNB1heH1M1D2sOsNHZ82YT86sJyle4fvQHZoW"]]
  [1m[35m (12.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "edugz94"], ["LIMIT", 1]]
  [1m[35mSQL (0.2ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "edugz94"], ["created_at", "2018-07-18 06:53:00.335209"], ["updated_at", "2018-07-18 06:53:00.335209"], ["password_digest", "$2a$10$NysRZk016Ea/GVDZywUXTOZwoHXzuPOTiFLS8Bjdhym6WAEH6enGm"]]
  [1m[35m (5.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "cbrzn"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "cbrzn"], ["created_at", "2018-07-18 06:53:00.400150"], ["updated_at", "2018-07-18 06:53:00.400150"], ["password_digest", "$2a$10$M1JNeCQR2/yyOZAcmVUvpOahcsxtAWShJ2Ew8vBzMye2CyD5VPkfq"]]
  [1m[35m (6.9ms)[0m  [1m[35mCOMMIT[0m
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "Jean"], ["LIMIT", 1]]
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["username", "jean"], ["created_at", "2018-07-18 06:53:00.466930"], ["updated_at", "2018-07-18 06:53:00.466930"], ["password_digest", "$2a$10$p4bugyexZA0JMX60Uqa4HOGNSk5NBwzCL9MQXuyBJzSvRtNiuNC0a"]]
  [1m[35m (6.8ms)[0m  [1m[35mCOMMIT[0m
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:53:11 -0400
=======
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:48:23 -0400
>>>>>>> 193531f70acca14801c6a58216b6d44fee085add
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
<<<<<<< HEAD
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 3.0ms)


Started POST "/api/v1/login" for 172.20.10.1 at 2018-07-18 02:53:22 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"eduardo", "password"=>"[FILTERED]", "user"=>{"username"=>"eduardo", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "eduardo"], ["password_digest", ""], ["LIMIT", 1]]
Completed 200 OK in 10ms (Views: 0.1ms | ActiveRecord: 3.9ms)


Started GET "/api/v1/users/find/null" for 172.20.10.1 at 2018-07-18 02:53:25 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"null", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%null%')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:53:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:53:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:53:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:53:36 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:53:36 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:53:36 -0400
=======
Completed 200 OK in 20ms (Views: 17.0ms | ActiveRecord: 3.4ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:48:29 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 14ms (Views: 2.3ms | ActiveRecord: 7.0ms)


Started GET "/api/v1/users/find/ed" for 192.168.1.100 at 2018-07-18 02:48:32 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 3ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edu" for 192.168.1.100 at 2018-07-18 02:48:33 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 3ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 192.168.1.100 at 2018-07-18 02:48:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:48:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 5ms (Views: 3.7ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/users/find/" for 192.168.1.100 at 2018-07-18 02:48:35 -0400
>>>>>>> 193531f70acca14801c6a58216b6d44fee085add
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
<<<<<<< HEAD
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:55:15 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 9ms (Views: 7.1ms | ActiveRecord: 2.5ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:55:19 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:55:31 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 9ms (Views: 7.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:55:33 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:56:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:56:07 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:56:09 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:56:09 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:56:09 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:56:10 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:56:22 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:56:23 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/g" for 172.20.10.1 at 2018-07-18 02:57:49 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"g", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%g%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/gh" for 172.20.10.1 at 2018-07-18 02:57:50 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"gh", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%gh%')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ghd" for 172.20.10.1 at 2018-07-18 02:57:50 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ghd", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ghd%')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/gh" for 172.20.10.1 at 2018-07-18 02:57:51 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"gh", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%gh%')[0m
Completed 200 OK in 1ms (Views: 0.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/g" for 172.20.10.1 at 2018-07-18 02:57:51 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"g", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%g%')[0m
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:57:52 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:58:52 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:59:01 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:59:03 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:59:03 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:59:04 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:59:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:59:09 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:59:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/c" for 172.20.10.1 at 2018-07-18 02:59:13 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"c", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%c%')[0m
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:59:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:59:21 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:05:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/null" for 172.20.10.1 at 2018-07-18 03:05:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"null", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%null%')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:06:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/signup" for 172.20.10.1 at 2018-07-18 03:07:17 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"cesar", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"png", "user"=>{"username"=>"cesar", "password_digest"=>"[FILTERED]", "picture"=>"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"}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "cesar"], ["LIMIT", 1]]
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "cesar"], ["created_at", "2018-07-18 07:07:17.522447"], ["updated_at", "2018-07-18 07:07:17.522447"], ["password_digest", "a"], ["picture", "6c7d039b-b85e-4c26-8bc1-2927ca5191c2.png"]]
  [1m[35m (35.7ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 60ms (Views: 0.2ms | ActiveRecord: 38.5ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:07:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 172.20.10.1 at 2018-07-18 03:07:47 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:12:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:12:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:13:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:14:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:14:57 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:15:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:15:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:15:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:22:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:22:50 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:44:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:44:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 03:45:01 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:45:07 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:57:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:58:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 03:59:09 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:59:33 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 03:59:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:02:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:02:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 04:02:28 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:02:39 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:03:47 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:04:00 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:11:59 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.7ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:12:16 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:12:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 04:12:52 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:12:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:13:01 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:14:47 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:15:06 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:15:22 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:15:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:17:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:22:15 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:22:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 04:22:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:26:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:26:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:28:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:29:17 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:29:42 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:29:56 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 04:30:28 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 3ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:32:42 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:33:19 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:35:05 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 9ms (Views: 8.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:39:02 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:39:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:39:20 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.1 at 2018-07-18 04:39:27 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:40:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 04:41:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:30:07 -0400
  [1m[35m (7.7ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (16.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 46ms (Views: 26.9ms | ActiveRecord: 20.7ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:30:59 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 12ms (Views: 6.1ms | ActiveRecord: 5.3ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:31:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:31:27 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 172.20.10.5 at 2018-07-18 13:31:40 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 17ms (Views: 0.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:32:53 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:32:55 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:33:13 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:33:20 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:33:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:38:09 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:39:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:39:31 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:40:33 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:40:39 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:41:11 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:41:14 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:41:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 172.20.10.5 at 2018-07-18 13:41:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:41:46 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:42:22 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:42:24 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:42:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 172.20.10.5 at 2018-07-18 13:42:55 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/cesar" for 172.20.10.5 at 2018-07-18 13:43:01 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cesar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cesar%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:43:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)
=======
Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:56:23 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:01:19 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:03:45 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 03:03:47 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:03:53 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:05:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:05:46 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:06:21 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:06:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/null" for 192.168.1.100 at 2018-07-18 03:06:35 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 5ms (ActiveRecord: 0.6ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:06:51 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:07:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:08:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:08:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:09:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:09:30 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:11:23 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:11:29 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:13:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:16:09 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 22ms (Views: 18.3ms | ActiveRecord: 4.1ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:16:17 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 16ms (Views: 1.3ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:17:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:17:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:17:31 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:18:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:18:45 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:18:51 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:18:57 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/null" for 192.168.1.100 at 2018-07-18 03:19:01 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:19:11 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:19:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:19:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:19:49 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:20:02 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:20:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:20:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:20:55 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:23:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.7ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:24:00 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:24:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:24:31 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:25:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.8ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:25:30 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:25:35 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 10ms (Views: 0.8ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:25:53 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:26:15 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:26:22 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:27:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:27:42 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:28:13 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:28:18 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:28:28 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:28:38 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 1.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:28:47 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:09 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:22 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:59 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:30:05 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:30:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:30:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:30:49 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:31:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:31:39 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:31:52 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:32:17 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:32:23 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:32:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:33:40 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:33:49 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (1.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:35:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:35:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:36:00 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:36:11 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:37:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:38:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:38:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:39:05 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:40:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:40:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:40:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:41:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:41:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:42:01 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:42:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:42:34 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:43:00 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:43:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:43:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:43:43 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:44:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:44:18 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:44:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:44:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:45:08 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:45:22 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:45:42 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:45:51 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:46:00 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (2.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 5.1ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:46:04 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:46:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:46:43 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:46:44 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 9ms (Views: 0.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:47:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:47:27 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:47:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/null" for 192.168.1.100 at 2018-07-18 03:47:46 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:47:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (2.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 3.0ms | ActiveRecord: 2.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:48:06 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:48:07 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:48:33 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:48:43 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:48:45 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:49:05 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:49:12 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:49:13 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:49:46 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:49:57 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:49:58 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 0.8ms)
>>>>>>> 193531f70acca14801c6a58216b6d44fee085add


Started POST "/api/v1/login" for 172.20.10.5 at 2018-07-18 13:46:34 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 8ms (Views: 0.6ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:46:45 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 62ms (Views: 0.4ms | ActiveRecord: 47.0ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:47:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:47:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:47:39 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:47:43 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:48:05 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:48:07 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:48:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:48:28 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 172.20.10.5 at 2018-07-18 13:48:37 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:48:38 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:49:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:49:39 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:50:00 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/null" for 172.20.10.5 at 2018-07-18 13:50:02 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 1ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:50:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:50:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 172.20.10.5 at 2018-07-18 13:50:32 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"cesar", "password"=>"[FILTERED]", "user"=>{"username"=>"cesar", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "cesar"], ["password_digest", "a"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:50:36 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:51:17 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:51:21 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.2ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.4ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 172.20.10.5 at 2018-07-18 13:51:48 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/5" for 172.20.10.5 at 2018-07-18 13:51:51 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"5", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 5], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "cesar"], ["id", 5], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.4ms | ActiveRecord: 0.5ms)


