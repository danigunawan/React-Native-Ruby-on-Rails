Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:04:01 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (1.9ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 0.9ms | ActiveRecord: 3.7ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:21 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"e", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"e", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (2.6ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "e"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "e"], ["created_at", "2018-07-18 06:04:21.924288"], ["updated_at", "2018-07-18 06:04:21.924288"], ["password_digest", "1"], ["picture", "8e70fe98-c57b-41bd-8df9-45d0a1419a9d.jpeg"]]
  [1m[35m (13.0ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 130ms (Views: 0.2ms | ActiveRecord: 26.6ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:37 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"ed", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"ed", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (1.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "ed"], ["LIMIT", 1]]
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "ed"], ["created_at", "2018-07-18 06:04:37.365932"], ["updated_at", "2018-07-18 06:04:37.365932"], ["password_digest", "1"], ["picture", "68c7cfe3-7826-4eb5-b146-ed14a9a3e67b.jpeg"]]
  [1m[35m (47.6ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 63ms (Views: 0.3ms | ActiveRecord: 50.0ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:42 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"edu", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"edu", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "edu"], ["LIMIT", 1]]
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "edu"], ["created_at", "2018-07-18 06:04:42.799994"], ["updated_at", "2018-07-18 06:04:42.799994"], ["password_digest", "1"], ["picture", "6161a7de-bd8e-44d8-82db-92df0505c960.jpeg"]]
  [1m[35m (50.5ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 63ms (Views: 0.2ms | ActiveRecord: 51.4ms)


Started POST "/api/v1/signup" for 192.168.1.100 at 2018-07-18 02:04:53 -0400
Processing by Api::V1::UsersController#create as */*
  Parameters: {"username"=>"eda", "password_digest"=>"[FILTERED]", "picture"=>"", "type"=>"jpeg", "user"=>{"username"=>"eda", "password_digest"=>"[FILTERED]", "picture"=>""}}
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) LIMIT $2[0m  [["username", "eda"], ["LIMIT", 1]]
  [1m[35mSQL (4.3ms)[0m  [1m[32mINSERT INTO "users" ("username", "created_at", "updated_at", "password_digest", "picture") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["username", "eda"], ["created_at", "2018-07-18 06:04:53.908958"], ["updated_at", "2018-07-18 06:04:53.908958"], ["password_digest", "1"], ["picture", "bb292ba1-40f6-4eb8-af59-e97e7250c715.jpeg"]]
  [1m[35m (51.1ms)[0m  [1m[35mCOMMIT[0m
Completed 200 OK in 63ms (Views: 0.2ms | ActiveRecord: 55.8ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:05:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:07:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:07:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:09:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:10:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:13:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:14:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:15:01 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:15:06 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:17:13 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:17:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:18:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:19:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:19:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:20:40 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:22:48 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:23:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:24:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:24:33 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:25:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:27:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:28:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:28:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1" for 127.0.0.1 at 2018-07-18 02:29:22 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/favicon.ico" for 127.0.0.1 at 2018-07-18 02:29:22 -0400
Started GET "/favicon.ico" for 127.0.0.1 at 2018-07-18 02:29:22 -0400
  
  
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
ActionController::RoutingError (No route matches [GET] "/favicon.ico"):
  
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:30:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 7ms (Views: 6.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:31:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 3.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:32:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:32:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:32:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started GET "/find/edugz" for 192.168.1.100 at 2018-07-18 02:32:40 -0400
  
ActionController::RoutingError (No route matches [GET] "/find/edugz"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:33:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.9ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 02:33:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"edugz", "password"=>"[FILTERED]", "user"=>{"username"=>"edugz", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "edugz"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.2ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 02:33:54 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started GET "/find/e" for 192.168.1.100 at 2018-07-18 02:33:55 -0400
  
ActionController::RoutingError (No route matches [GET] "/find/e"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:34:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:35:18 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:35:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:35:30 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:37:23 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:37:41 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 4.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:37:46 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:37:48 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:38:03 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:38:06 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 3ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:38:20 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:38:21 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:39:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:39:37 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:39:48 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:40:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:40:13 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:41:01 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:41:02 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.8ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 5ms (Views: 2.4ms | ActiveRecord: 1.8ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:41:42 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:41:43 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.1ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 4ms (Views: 2.8ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:41:51 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:41:56 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 1.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:42:56 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:43:03 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:43:32 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (1.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 4.2ms | ActiveRecord: 1.2ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:43:40 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 2ms (Views: 1.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 01:59:20 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 11ms (Views: 9.1ms | ActiveRecord: 3.0ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:00:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 11ms (Views: 7.1ms | ActiveRecord: 4.1ms)


  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE (username like '%e%') LIMIT $1[0m  [["LIMIT", 11]]
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" LIMIT $1[0m  [["LIMIT", 11]]
  [1m[35m (0.4ms)[0m  [1m[34mSELECT COUNT(*) FROM "users" WHERE (username like '%e%')[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT COUNT(*) FROM "users" WHERE (username like '%ed%')[0m
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE (username like '%ed%') LIMIT $1[0m  [["LIMIT", 11]]
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:04:22 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:06:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/t" for 172.20.10.1 at 2018-07-18 02:11:48 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"t", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "t"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:12:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 10ms (Views: 8.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/r" for 172.20.10.1 at 2018-07-18 02:12:48 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"r", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "r"]]
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:13:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/d" for 172.20.10.1 at 2018-07-18 02:13:19 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"d", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "d"]]
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:13:26 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:13:42 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "e"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:13:45 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "ed"]]
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:13:49 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edu"]]
Completed 200 OK in 1ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edua" for 172.20.10.1 at 2018-07-18 02:13:51 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edua", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edua"]]
Completed 200 OK in 1ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:13:54 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edu"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edug" for 172.20.10.1 at 2018-07-18 02:13:56 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edug", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edug"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edugz" for 172.20.10.1 at 2018-07-18 02:13:58 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edugz", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edugz"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edug" for 172.20.10.1 at 2018-07-18 02:14:05 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edug", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edug"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:14:07 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edu"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edua" for 172.20.10.1 at 2018-07-18 02:14:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edua", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "edua"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/eduar" for 172.20.10.1 at 2018-07-18 02:14:12 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"eduar", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "eduar"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/eduard" for 172.20.10.1 at 2018-07-18 02:14:14 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"eduard", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "eduard"]]
Completed 200 OK in 1ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/eduardo" for 172.20.10.1 at 2018-07-18 02:14:16 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"eduardo", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE "users"."username" = $1[0m  [["username", "eduardo"]]
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:15:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:17:28 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:18:28 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
Completed 500 Internal Server Error in 41ms (ActiveRecord: 0.0ms)


  
NoMethodError (undefined method `like' for #<Api::V1::UsersController:0x007f0a94004498>):
  
app/controllers/api/v1/users_controller.rb:78:in `get_user'
Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:18:51 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:18:54 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like 'e')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:19:03 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like 'ed')[0m
Completed 200 OK in 1ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:19:39 -0400
  
SyntaxError (/home/cesar/Urulife/railstagram/rails/app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tIDENTIFIER, expecting ')'
e("username like ?", '%'params[:username]'%')
                              ^
/home/cesar/Urulife/railstagram/rails/app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tSTRING_BEG, expecting keyword_end
like ?", '%'params[:username]'%')
                              ^
/home/cesar/Urulife/railstagram/rails/app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected ')', expecting keyword_end
e ?", '%'params[:username]'%')
                              ^):
  
app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tIDENTIFIER, expecting ')'
app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected tSTRING_BEG, expecting keyword_end
app/controllers/api/v1/users_controller.rb:78: syntax error, unexpected ')', expecting keyword_end
Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:20:00 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 10ms (Views: 7.1ms | ActiveRecord: 3.5ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:20:08 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:20:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:20:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:21:12 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 10ms (Views: 7.3ms | ActiveRecord: 3.8ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:21:15 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:22:00 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:22:04 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:22:06 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:22:20 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:22:31 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:22:36 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:22:38 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:22:50 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:22:55 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:23:21 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:23:29 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:24:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:24:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:25:24 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:25:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:25:58 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:26:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:26:31 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:26:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:27:03 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:27:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:27:18 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:27:22 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 1ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:27:53 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:28:53 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 1.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:30:07 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:30:12 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:30:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/q" for 172.20.10.1 at 2018-07-18 02:30:44 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"q", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%q%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:31:52 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:33:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:33:32 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:33:42 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:34:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:36:58 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:37:02 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:37:51 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:37:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:38:00 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:38:04 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:38:07 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:38:10 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:38:11 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:38:11 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:40:19 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 172.20.10.1 at 2018-07-18 02:40:23 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/find/c" for 172.20.10.1 at 2018-07-18 02:40:28 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"c", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%c%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/cb" for 172.20.10.1 at 2018-07-18 02:40:29 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"cb", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%cb%')[0m
Completed 200 OK in 2ms (Views: 0.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/c" for 172.20.10.1 at 2018-07-18 02:40:30 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"c", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%c%')[0m
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/" for 172.20.10.1 at 2018-07-18 02:40:31 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 172.20.10.1 at 2018-07-18 02:40:31 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 2ms (Views: 1.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 172.20.10.1 at 2018-07-18 02:40:35 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edu" for 172.20.10.1 at 2018-07-18 02:40:35 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 2ms (Views: 1.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 02:48:23 -0400
  [1m[35m (0.4ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 20ms (Views: 17.0ms | ActiveRecord: 3.4ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:48:29 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 14ms (Views: 2.3ms | ActiveRecord: 7.0ms)


Started GET "/api/v1/users/find/ed" for 192.168.1.100 at 2018-07-18 02:48:32 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 3ms (Views: 1.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/edu" for 192.168.1.100 at 2018-07-18 02:48:33 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"edu", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%edu%')[0m
Completed 200 OK in 3ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/ed" for 192.168.1.100 at 2018-07-18 02:48:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"ed", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%ed%')[0m
Completed 200 OK in 3ms (Views: 1.9ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:48:34 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 5ms (Views: 3.7ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/users/find/" for 192.168.1.100 at 2018-07-18 02:48:35 -0400
  
ActionController::RoutingError (No route matches [GET] "/api/v1/users/find"):
  
actionpack (5.1.6) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'
railties (5.1.6) lib/rails/rack/logger.rb:36:in `call_app'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `block in call'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `block in tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:26:in `tagged'
activesupport (5.1.6) lib/active_support/tagged_logging.rb:69:in `tagged'
railties (5.1.6) lib/rails/rack/logger.rb:24:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/request_id.rb:25:in `call'
rack (2.0.5) lib/rack/runtime.rb:22:in `call'
activesupport (5.1.6) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/executor.rb:12:in `call'
actionpack (5.1.6) lib/action_dispatch/middleware/static.rb:125:in `call'
rack (2.0.5) lib/rack/sendfile.rb:111:in `call'
rack-cors (1.0.2) lib/rack/cors.rb:97:in `call'
railties (5.1.6) lib/rails/engine.rb:522:in `call'
puma (3.11.4) lib/puma/configuration.rb:225:in `call'
puma (3.11.4) lib/puma/server.rb:632:in `handle_request'
puma (3.11.4) lib/puma/server.rb:446:in `process_client'
puma (3.11.4) lib/puma/server.rb:306:in `block in run'
puma (3.11.4) lib/puma/thread_pool.rb:120:in `block in spawn_thread'
Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 02:56:23 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:01:19 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:03:45 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/find/e" for 192.168.1.100 at 2018-07-18 03:03:47 -0400
Processing by Api::V1::UsersController#get as */*
  Parameters: {"username"=>"e", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users" WHERE (username like '%e%')[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:03:53 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.8ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:05:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:05:46 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:06:21 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:06:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/null" for 192.168.1.100 at 2018-07-18 03:06:35 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 5ms (ActiveRecord: 0.6ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:06:51 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:07:43 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:08:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 3.4ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:08:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:09:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:09:30 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:11:23 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:11:29 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:13:30 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:16:09 -0400
  [1m[35m (0.5ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.8ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 22ms (Views: 18.3ms | ActiveRecord: 4.1ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:16:17 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 16ms (Views: 1.3ms | ActiveRecord: 6.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:17:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:17:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:17:31 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:18:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:18:45 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:18:51 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:18:57 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/null" for 192.168.1.100 at 2018-07-18 03:19:01 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.2ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:19:11 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:19:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 1.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:19:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:19:49 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:20:02 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:20:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:20:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:20:55 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:23:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.7ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:24:00 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:24:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:24:31 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:25:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.8ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:25:30 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:25:35 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 10ms (Views: 0.8ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:25:53 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:26:15 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:26:22 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:27:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:27:42 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 1.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:28:13 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:28:18 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:28:28 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 2.9ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:28:38 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 1.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:28:47 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:09 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:22 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:29:59 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:30:05 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:30:14 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:30:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:30:49 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:31:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:31:39 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:31:52 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:32:17 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:32:23 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:32:34 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:33:40 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.5ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:33:49 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (1.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 1.5ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:35:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:35:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 2ms (Views: 2.0ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:36:00 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:36:11 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:37:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:38:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:38:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:39:05 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:40:26 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:40:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.0ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:40:44 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:41:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:41:55 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:42:01 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.8ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:42:29 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:42:34 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:43:00 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:43:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:43:37 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.8ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:43:43 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.6ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:44:12 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.6ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:44:18 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:44:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:44:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:45:08 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:45:22 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:45:42 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:45:51 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:46:00 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (2.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 8ms (Views: 5.1ms | ActiveRecord: 2.7ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:46:04 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:46:38 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:46:43 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:46:44 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 9ms (Views: 0.5ms | ActiveRecord: 2.4ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:47:25 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:47:27 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:47:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.6ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/null" for 192.168.1.100 at 2018-07-18 03:47:46 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:47:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (2.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 3.0ms | ActiveRecord: 2.4ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:48:06 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 1.0ms | ActiveRecord: 0.5ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:48:07 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 3ms (Views: 0.5ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:48:33 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.1ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:48:43 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.7ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:48:45 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 0.6ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:49:05 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.4ms | ActiveRecord: 0.3ms)


Started POST "/api/v1/login" for 192.168.1.100 at 2018-07-18 03:49:12 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 2ms (Views: 0.5ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:49:13 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.4ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:49:46 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.100 at 2018-07-18 03:49:57 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.5ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.100 at 2018-07-18 03:49:58 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:45:03 -0400
  [1m[35m (0.6ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 25ms (Views: 20.5ms | ActiveRecord: 5.4ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:45:05 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.8ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 25ms (Views: 0.9ms | ActiveRecord: 8.9ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:45:18 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.2ms | ActiveRecord: 0.2ms)


Started POST "/api/v1/login" for 192.168.1.101 at 2018-07-18 13:45:25 -0400
Processing by Api::V1::UsersController#log as */*
  Parameters: {"username"=>"e", "password"=>"[FILTERED]", "user"=>{"username"=>"e", "password"=>"[FILTERED]"}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."username" = $1 AND "users"."password_digest" = $2 LIMIT $3[0m  [["username", "e"], ["password_digest", "1"], ["LIMIT", 1]]
Completed 200 OK in 6ms (Views: 1.5ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:45:26 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (1.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.7ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 14ms (Views: 0.6ms | ActiveRecord: 9.3ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:45:54 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.8ms | ActiveRecord: 0.4ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:45:55 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (1.2ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 7ms (Views: 0.7ms | ActiveRecord: 1.7ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:46:10 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 6ms (Views: 5.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:46:16 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.1ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:46:17 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.6ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:46:44 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.0ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:46:45 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.6ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 6ms (Views: 0.8ms | ActiveRecord: 1.1ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:47:51 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.7ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:47:52 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (1.1ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 7ms (Views: 0.5ms | ActiveRecord: 1.6ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:48:11 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.2ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.9ms | ActiveRecord: 0.2ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:48:11 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.3ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:50:04 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.7ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.1ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:50:05 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 4ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:51:58 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:52:00 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.5ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.8ms | ActiveRecord: 0.8ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:52:36 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 3ms (Views: 2.3ms | ActiveRecord: 0.3ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:52:36 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.7ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:53:24 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (1.0ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 3.2ms | ActiveRecord: 1.0ms)


Started GET "/" for 192.168.1.101 at 2018-07-18 13:53:25 -0400
Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:53:25 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.6ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.9ms)


Processing by Rails::WelcomeController#index as */*
  Rendering /home/eduardo/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/eduardo/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (4.6ms)
Completed 200 OK in 33ms (Views: 13.5ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:53:49 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 5ms (Views: 4.0ms | ActiveRecord: 0.4ms)


Started GET "/" for 192.168.1.101 at 2018-07-18 13:53:53 -0400
Processing by Rails::WelcomeController#index as */*
  Rendering /home/eduardo/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /home/eduardo/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (2.3ms)
Completed 200 OK in 9ms (Views: 6.1ms | ActiveRecord: 0.0ms)


Started GET "/api/v1/users/id/1" for 192.168.1.101 at 2018-07-18 13:53:53 -0400
Processing by Api::V1::UsersController#show as */*
  Parameters: {"id"=>"1", "user"=>{}}
  [1m[36mUser Load (0.5ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  [1m[36mUser Exists (0.4ms)[0m  [1m[34mSELECT  1 AS one FROM "users" WHERE LOWER("users"."username") = LOWER($1) AND ("users"."id" != $2) LIMIT $3[0m  [["username", "e"], ["id", 1], ["LIMIT", 1]]
Completed 200 OK in 5ms (Views: 0.6ms | ActiveRecord: 1.0ms)


Started GET "/api/v1/users" for 192.168.1.101 at 2018-07-18 13:54:27 -0400
Processing by Api::V1::UsersController#index as */*
  Parameters: {"user"=>{}}
  [1m[36mUser Load (0.3ms)[0m  [1m[34mSELECT "users".* FROM "users"[0m
Completed 200 OK in 4ms (Views: 3.4ms | ActiveRecord: 0.3ms)


Started GET "/" for 192.168.1.101 at 2018-07-18 13:54:28 -0400
Processing by Rails::WelcomeController#index as */*
  Rendering /home/eduardo/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
Started GET "/api/v1/users/id/null" for 192.168.1.101 at 2018-07-18 13:54:28 -0400
  Rendered /home/eduardo/.rbenv/versions/2.4.0/lib/ruby/gems/2.4.0/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (1.9ms)
Processing by Api::V1::UsersController#show as */*
Completed 200 OK in 10ms (Views: 7.1ms | ActiveRecord: 0.0ms)


  Parameters: {"id"=>"null", "user"=>{}}
  [1m[36mUser Load (0.4ms)[0m  [1m[34mSELECT  "users".* FROM "users" WHERE "users"."id" = $1 LIMIT $2[0m  [["id", 0], ["LIMIT", 1]]
Completed 404 Not Found in 2ms (ActiveRecord: 0.4ms)


  
ActiveRecord::RecordNotFound (Couldn't find User with 'id'=null):
  
app/controllers/api/v1/users_controller.rb:14:in `show'
